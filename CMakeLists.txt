CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(gallery C CXX)

SET(RSRC_DIR res)

SET(EDC_DIR black_theme/edc)
SET(IMG_DIR black_theme/edc/images)
SET(SOUND_DIR black_theme/edc/sounds)
SET(IMG_EDC_DIR black_theme/images_edc)

AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/2dview 2DVIEW_SRCS)

AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src MAIN_SRCS)
AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/features FEATURE_SRCS)
AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/widget WIDGET_SRCS)
AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/util UTIL_SRCS)
AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src/data DATA_SRCS)

SET(APP_SRCS
	${2DVIEW_SRCS}
	${MAIN_SRCS}
	${FEATURE_SRCS}
	${WIDGET_SRCS}
	${UTIL_SRCS}
	${DATA_SRCS}
	)

SET(VENDOR "tizen")
SET(PACKAGE ${PROJECT_NAME})
SET(PKGNAME "org.${VENDOR}.gallery")
SET(PREFIX ${CMAKE_INSTALL_PREFIX})
SET(BINDIR "${PREFIX}/bin")
SET(RESDIR "${PREFIX}/res")
SET(DATADIR "${PREFIX}/data")
SET(LOCALEDIR "${RESDIR}/locale")
SET(ICONDIR "${CMAKE_APP_ICON_DIR}")
SET(EDJDIR "${RESDIR}/edje")

IF("${CMAKE_BUILD_TYPE}" STREQUAL "")
	SET(CMAKE_BUILD_TYPE "Release")
ENDIF("${CMAKE_BUILD_TYPE}" STREQUAL "")
MESSAGE("Build type: ${CMAKE_BUILD_TYPE}")

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/2dview)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/inc)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/inc/data)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/inc/util)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/inc/widget)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/inc/features)

INCLUDE(FindPkgConfig)
pkg_check_modules(pkgs REQUIRED
	appsvc
	elementary
	evas
	efl-extension
	glib-2.0
	notification
	storage
	capi-appfw-application
	capi-content-media-content
	capi-system-system-settings
	capi-appfw-widget-application
)

FOREACH(flag ${pkgs_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS} -fvisibility=hidden")
SET(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS} -fPIC")
SET(CMAKE_C_FLAGS_DEBUG "-O0 -g -fpie")
SET(CMAKE_C_FLAGS_RELEASE "-O2 -fpie")

FIND_PROGRAM(UNAME NAMES uname)
EXEC_PROGRAM("${UNAME}" ARGS "-m" OUTPUT_VARIABLE "ARCH")
IF("${ARCH}" MATCHES "arm")
	ADD_DEFINITIONS("-DTARGET")
	MESSAGE("add -DTARGET")
ENDIF("${ARCH}" MATCHES "arm")

ADD_DEFINITIONS("-DVENDOR=\"${VENDOR}\"")
ADD_DEFINITIONS("-DPACKAGE=\"${PACKAGE}\"")
ADD_DEFINITIONS("-DPACKAGE_NAME=\"${PKGNAME}\"")
ADD_DEFINITIONS("-DPREFIX=\"${PREFIX}\"")
ADD_DEFINITIONS("-DRESDIR=\"${RESDIR}\"")
ADD_DEFINITIONS("-DDATADIR=\"${DATADIR}\"")
ADD_DEFINITIONS("-DLOCALEDIR=\"${LOCALEDIR}\"")
ADD_DEFINITIONS("-DICONDIR=\"${ICONDIR}\"")
ADD_DEFINITIONS("-DEDJDIR=\"${EDJDIR}\"")

ADD_DEFINITIONS("-D_USE_DLOG_")
ADD_DEFINITIONS("-D_USE_SECURE_LOG_")
ADD_DEFINITIONS("-D_USE_ROTATE_BG")
ADD_DEFINITIONS("-D_RENAME_ALBUM_SENSITIVE")
ADD_DEFINITIONS("-D_USE_OPENGL_BACKEND")
ADD_DEFINITIONS("-D_USE_GRID_CHECK")
ADD_DEFINITIONS("-D_USE_ALBUM_SHARE")

SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--as-needed -pie")
SET(CMAKE_LDFLAGS "-Wl,-zdefs" )

ADD_EXECUTABLE(${PROJECT_NAME} ${APP_SRCS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS} -lstdc++ "-ldl")

# EDC/EDJ
ADD_CUSTOM_COMMAND(OUTPUT gallery.edj
		COMMAND edje_cc -id ${CMAKE_SOURCE_DIR}/${RSRC_DIR}/${IMG_DIR}
		-sd  ${CMAKE_SOURCE_DIR}/${RSRC_DIR}/${SOUND_DIR}
		${CMAKE_SOURCE_DIR}/${RSRC_DIR}/${EDC_DIR}/gallery.edc ${CMAKE_BINARY_DIR}/gallery.edj
		DEPENDS ${CMAKE_SOURCE_DIR}/${RSRC_DIR}/${EDC_DIR}/gallery.edc
)

ADD_CUSTOM_COMMAND(OUTPUT gl-images.edj
		COMMAND edje_cc -id ${CMAKE_SOURCE_DIR}/${RSRC_DIR}/${IMG_EDC_DIR}
		${CMAKE_SOURCE_DIR}/${RSRC_DIR}/${IMG_EDC_DIR}/gl-images.edc ${CMAKE_BINARY_DIR}/gl-images.edj
		DEPENDS ${CMAKE_SOURCE_DIR}/${RSRC_DIR}/${IMG_EDC_DIR}/gl-images.edc
)

ADD_CUSTOM_TARGET(edj_build DEPENDS gallery.edj gl-images.edj)

ADD_DEPENDENCIES(${PROJECT_NAME} edj_build)

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION ${BINDIR})
INSTALL(FILES ${CMAKE_BINARY_DIR}/gallery.edj DESTINATION ${EDJDIR})
INSTALL(FILES ${CMAKE_BINARY_DIR}/gl-images.edj DESTINATION ${EDJDIR})

# install manifest file & icon
INSTALL(FILES ${CMAKE_BINARY_DIR}/${PKGNAME}.xml DESTINATION ${CMAKE_APP_SHARE_PACKAGES_DIR})
INSTALL(FILES ${CMAKE_SOURCE_DIR}/${RSRC_DIR}/icon/${PKGNAME}.png DESTINATION ${ICONDIR})
INSTALL(FILES ${CMAKE_SOURCE_DIR}/widget/res/preview_gallery_4x4.png DESTINATION ${ICONDIR})

INSTALL(DIRECTORY ${CMAKE_SOURCE_DIR}/res/black_theme/images DESTINATION ${RESDIR})

# i18n
ADD_SUBDIRECTORY(res/po)
ADD_SUBDIRECTORY(widget)

